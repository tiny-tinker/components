version: 2
jobs:
  checkout_code:
    docker:
      - image: circleci/node:latest
    working_directory: ~/hub
    steps:
      - checkout
      - save_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/hub

  dependencies:
    docker:
      - image: circleci/node:latest
    working_directory: ~/hub
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn install
      - save_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

  build:
    docker:
      - image: circleci/node:latest
    working_directory: ~/hub
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Build app
          command: yarn build
      - save_cache:
          key: v1-dist-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - dist

  test:
    docker:
      - image: circleci/node:latest
    working_directory: ~/hub
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn test:unit

  deploy:
    docker:
      - image: circleci/node:latest
    working_directory: ~/hub
    steps:
      - restore_cache:
          key: v1-dist-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Authenticate with registry
          command: echo "//registry.npmjs.org/:_authToken=$npm_TOKEN" > ~/hub/.npmrc
      - run:
          name: Publish package
          command: npm publish

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - checkout_code
      - dependencies:
          requires:
          - checkout_code
      - test:
          requires:
            - dependencies
      - build:
          requires:
            - dependencies
      - hold:
          type: approval
          requires:
            - build
            - test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - hold
          filters:
            branches:
              only: master
